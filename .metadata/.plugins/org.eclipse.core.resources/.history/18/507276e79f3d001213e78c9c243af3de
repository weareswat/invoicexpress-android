package pt.rupeal.invoicexpress.adapters;

import java.util.HashMap;

import pt.rupeal.invoicexpress.R;
import pt.rupeal.invoicexpress.widgets.ContactsLetterTextView;
import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewParent;
import android.widget.BaseAdapter;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.ListView;
import android.widget.TextView;

public class ContactListRowAdapter extends BaseAdapter {

	private Context context;
	
	private String[] contacts;
	
	public ContactListRowAdapter(Context context, String[] contacts){
		this.context = context;
		this.contacts = contacts;
	}
	
	@Override
	public int getCount() {
		return contacts.length;
	}

	@Override
	public Object getItem(int position) {
		return contacts[position];
	}

	@Override
	public long getItemId(int position) {
		return position;
	}
	
	private LinearLayout getLinearLayoutContact(ViewGroup parent, String contactName){
		
		ListView tmp = (ListView) parent;
		int childCount = tmp.getChildCount();
		for (int i = 0; i < childCount; i++) {
			LinearLayout linearLayoutTmp = (LinearLayout) tmp.getChildAt(i);
			TextView textViewTmp = (TextView) linearLayoutTmp.getChildAt(1);
			if(textViewTmp.getText().equals(contactName)){
				return linearLayoutTmp;
			}
		}
		
		return null;
	}
	
	private boolean existsContacNameWithSameStartLetter(ViewGroup parent, String contactName){
		
		ListView tmp = (ListView) parent;
		int childCount = tmp.getChildCount();
		for (int i = 0; i < childCount; i++) {
			LinearLayout linearLayoutTmp = (LinearLayout) tmp.getChildAt(i);
			TextView textViewTmp = (TextView) linearLayoutTmp.getChildAt(1);
			if(textViewTmp.getText().charAt(0) == contactName.charAt(0)){
				return true;
			}
		}
		
		return false;
	}	
	
	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);

		convertView = inflater.inflate(R.layout.contacts_list_row_fragment, parent, false);

		String contactName = contacts[position];
			
		LinearLayout linearLayoutTmp = getLinearLayoutContact(parent, contactName);
		
		if(linearLayoutTmp != null){
			
			ViewGroup parentTmp = (ViewGroup) linearLayoutTmp.getParent();
			convertView = parentTmp.getChildAt(0);
			return convertView;
			
		} else {
			
			if(!existsContacNameWithSameStartLetter(parent, contactName)){
				
				LinearLayout letterLayout = (LinearLayout) convertView.findViewById(R.id.contact_list_letter);
				
				View emptyView = new View(context);
				emptyView.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, 60));
				letterLayout.addView(emptyView);
				
				ContactsLetterTextView letterTextView = new ContactsLetterTextView(context);
				letterTextView.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT));
				letterTextView.setBackgroundColor(context.getResources().getColor(R.color.green_shadow));
				letterTextView.setTextColor(context.getResources().getColor(R.color.green_normal));
				
				String contactLetter = String.valueOf(contactName.charAt(0));
				letterTextView.setText(contactLetter);
				
				letterTextView.setTextSize(12);
				letterTextView.setPadding(12, 8, 0, 8);
				letterLayout.addView(letterTextView);
				
				View lineSeperator = new View(context);
				lineSeperator.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, 2));
				lineSeperator.setBackgroundColor(context.getResources().getColor(R.color.green_normal));
				letterLayout.addView(lineSeperator);
				
			}
			
			TextView contactTitleTextView = (TextView) convertView.findViewById(R.id.contact_name);
			contactTitleTextView.setText(contactName);
			
			return convertView;
		}
	}

}
